<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">

    <!-- 配置SpringMVC -->
    <!-- 1.开启SpringMVC注解模式 -->
    <!-- 简化配置：
        (1)自动注册DefaultAnootationHandlerMapping,AnotationMethodHandlerAdapter
        (2)提供一些列：数据绑定，数字和日期的format @NumberFormat, @DateTimeFormat, xml,json默认读写支持
    -->
    <!--mvcContentNegotiationManager="contentNegotiationManager"-->
    <!--<mvc:annotation-driven validator="validator"/>-->
    <!-- 以.html为后缀名访问，默认返回数据类型是 text/html， 所以要修改返回的数据类型 -->

    <bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
        <property name="mediaTypes">
            <map>
                <entry key="html" value="application/json;charset=UTF-8"/>
            </map>
        </property>
    </bean>
    <!-- 2.静态资源默认servlet配置
        (1)加入对静态资源的处理：js,gif,png
        (2)允许使用"/"做整体映射
     -->
    <mvc:default-servlet-handler/>
    <!--使用异常处理器-->
    <!--<bean class="cqut.edu.exceptionHandler.ExceptionHandler"/>-->

    <!-- 3.配置jsp 显示ViewResolver -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/WEB-INF/JSP"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!--<mvc:interceptors>-->
    <!--&lt;!&ndash; 多个拦截器，顺序执行 &ndash;&gt;-->
    <!--<mvc:interceptor>-->
    <!--<mvc:mapping path="/**"/>-->
    <!--&lt;!&ndash;不拦截静态资源&ndash;&gt;-->
    <!--<mvc:exclude-mapping path="/**/*.css"/>-->
    <!--<mvc:exclude-mapping path="/**/*.js"/>-->
    <!--<mvc:exclude-mapping path="/**/*.png"/>-->
    <!--<mvc:exclude-mapping path="/**/*.gif"/>-->
    <!--<mvc:exclude-mapping path="/**/*.jpg"/>-->
    <!--<mvc:exclude-mapping path="/**/*.jpeg"/>-->
    <!--&lt;!&ndash;xiugai&ndash;&gt;-->
    <!--<bean class="com.daniel.interceptor.LoginInterceptor"/>-->
    <!--</mvc:interceptor>-->
    <!--</mvc:interceptors>-->
    <!-- 设置上传文件最大值   1M=1*1024*1024(B)=1048576 bytes -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="1048576"/>
        <property name="defaultEncoding" value="UTF-8"/>
        <property name="resolveLazily" value="true"/>
    </bean>
    <!--必须写完-->
    <mvc:annotation-driven/>
    <mvc:default-servlet-handler/>
    <context:component-scan base-package="com.cqut.controller;com.cqut.exceptionHandler"/>
</beans>